"""
Django settings for api project.

Generated by 'django-admin startproject' using Django 3.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

from app.settings.components import BASE_DIR

from six import python_2_unicode_compatible
import django.utils.encoding

from django.utils.translation import ugettext_lazy as _

django.utils.encoding.python_2_unicode_compatible = python_2_unicode_compatible

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'jet.dashboard',
    'jet',
    'rest_framework',
    'django_extensions',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework_filters',
    'rest_framework.authtoken',
    'django_filters',
    'drf_yasg',
    'rest_auth',
    'drf_app_generators',
    'drf_core',
    'health_check',
    # 'storages',
    # 'django_celery_results',
    # 'django_celery_beat',
]

INSTALLED_APPS += [
    'apis',
    'debugging',
]

API_APPS = [
    'accounts'
]

INSTALLED_APPS += API_APPS

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            '/app/src/app/templates/'
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Full domain of the app.
DOMAIN = os.getenv('DOMAIN', 'http://localhost:8000')

# Swagger settings.
SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'Basic': {
            'type': 'basic'
        },
        'Bearer': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header'
        }
    }
}


# -------------------------------------------------------------------
# Setting CORS headers
# -------------------------------------------------------------------
CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'content-disposition',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
]

# -------------------------------------------------------------------
# Setting for enable DRF admin
# -------------------------------------------------------------------
ADMIN_ENABLED = os.environ.get('ADMIN_ENABLED')


# -------------------------------------------------------------------
# Setting for enable Swagger and Redoc
# -------------------------------------------------------------------
SWAGGER_ENABLED = os.environ.get('SWAGGER_ENABLED')
REDOC_ENABLED = os.environ.get('REDOC_ENABLED')


X_FRAME_OPTIONS = 'SAMEORIGIN'

# Configuration for Django Jet Admin
JET_THEMES = [
    {
        'theme': 'default',     # theme folder name
        'color': '#47bac1',     # color of the theme's button in user menu
        'title': 'Default'      # theme title
    },
    {
        'theme': 'green',
        'color': '#44b78b',
        'title': 'Green'
    },
    {
        'theme': 'light-green',
        'color': '#2faa60',
        'title': 'Light Green'
    },
    {
        'theme': 'light-violet',
        'color': '#a464c4',
        'title': 'Light Violet'
    },
    {
        'theme': 'light-blue',
        'color': '#5EADDE',
        'title': 'Light Blue'
    },
    {
        'theme': 'light-gray',
        'color': '#222',
        'title': 'Light Gray'
    }
]
JET_DEFAULT_THEME = 'light-gray'
JET_SIDE_MENU_COMPACT = True
JET_APP_INDEX_DASHBOARD = 'jet.dashboard.dashboard.DefaultAppIndexDashboard'

JET_SIDE_MENU_ITEMS = [
    {'app_label': 'accounts', 'items': [
        {'name': 'user'},
    ]}
]

# Environment
ENVIRONMENT = os.environ.get('ENVIRONMENT')

# Email system
EMAIL_SYSTEM = os.environ.get('EMAIL_SYSTEM')

# Domain for web application
WEB_APPLICATION_DOMAIN = os.environ.get('WEB_APPLICATION_DOMAIN')

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
